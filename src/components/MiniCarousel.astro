---
import { Image } from "astro:assets";
import { genres } from "~/config";
import { cn } from "~/utils/cn";

function isActive(path: string): boolean {
  const isDev = import.meta.env.DEV;
  return isDev
    ? path === Astro.url.pathname
    : `${path}/` === Astro.url.pathname;
}
---

<section class="hidden md:flex md:flex-col md:items-end md:gap-6 md:pb-4">
  <div class="flex gap-2">
    <button
      id="previous-button"
      class="rounded-full border border-gray-7 p-1 text-gray-11 transition-colors hover:border-gray-8 hover:text-gray-12"
    >
      <svg
        class="size-4"
        width="15"
        height="15"
        viewBox="0 0 15 15"
        fill="none"
        xmlns="http://www.w3.org/2000/svg"
        ><path
          d="M8.84182 3.13514C9.04327 3.32401 9.05348 3.64042 8.86462 3.84188L5.43521 7.49991L8.86462 11.1579C9.05348 11.3594 9.04327 11.6758 8.84182 11.8647C8.64036 12.0535 8.32394 12.0433 8.13508 11.8419L4.38508 7.84188C4.20477 7.64955 4.20477 7.35027 4.38508 7.15794L8.13508 3.15794C8.32394 2.95648 8.64036 2.94628 8.84182 3.13514Z"
          fill="currentColor"
          fill-rule="evenodd"
          clip-rule="evenodd"></path></svg
      >
    </button>
    <button
      id="next-button"
      class="rounded-full border border-gray-7 p-1 text-gray-11 transition-colors hover:border-gray-8 hover:text-gray-12"
    >
      <svg
        class="size-4"
        width="15"
        height="15"
        viewBox="0 0 15 15"
        fill="none"
        xmlns="http://www.w3.org/2000/svg"
        ><path
          d="M6.1584 3.13508C6.35985 2.94621 6.67627 2.95642 6.86514 3.15788L10.6151 7.15788C10.7954 7.3502 10.7954 7.64949 10.6151 7.84182L6.86514 11.8418C6.67627 12.0433 6.35985 12.0535 6.1584 11.8646C5.95694 11.6757 5.94673 11.3593 6.1356 11.1579L9.565 7.49985L6.1356 3.84182C5.94673 3.64036 5.95694 3.32394 6.1584 3.13508Z"
          fill="currentColor"
          fill-rule="evenodd"
          clip-rule="evenodd"></path></svg
      >
    </button>
  </div>
  <div
    id="genre-images-div"
    class="grid snap-x snap-mandatory grid-flow-col overflow-x-hidden md:auto-cols-[calc((100%-1rem)/2)] md:gap-4 lg:auto-cols-[calc((100%-2*1.5rem)/3)] lg:gap-6 2xl:auto-cols-[calc((100%-3*2rem)/4)] 2xl:gap-8"
  >
    {
      genres.map(({ name, tagline, path, genreImage, genreImageAltText }) => (
        <a href={path} class="snap-end">
          <div
            class={cn(
              "flex rounded-md bg-gray-3",
              isActive(path) &&
                "border border-gray-7 transition-colors hover:border-gray-8",
            )}
          >
            <div class="basis-2/5">
              <Image
                class="h-24 rounded-l-md object-cover"
                src={genreImage}
                alt={genreImageAltText}
              />
            </div>
            <div class="basis-3/5 space-y-2 text-balance p-2">
              <p class="text-xl/5 font-bold">{name}</p>
              <p>{tagline}</p>
            </div>
          </div>
        </a>
      ))
    }
  </div>
</section>

<script>
  const genreImagesDiv = document.getElementById("genre-images-div");
  const nextButton = document.getElementById("next-button");
  const previousButton = document.getElementById("previous-button");

  if (genreImagesDiv && nextButton && previousButton) {
    const firstItem = genreImagesDiv.querySelector(
      ".snap-end",
    ) as HTMLAnchorElement;
    const style = window.getComputedStyle(firstItem);
    const marginRight = parseInt(style.marginRight);
    const marginLeft = parseInt(style.marginLeft);
    const childWidth = firstItem.offsetWidth + marginRight + marginLeft;

    nextButton.addEventListener("click", () => {
      genreImagesDiv.scrollBy({ left: childWidth, behavior: "smooth" });
    });

    previousButton.addEventListener("click", () => {
      genreImagesDiv.scrollBy({ left: -childWidth, behavior: "smooth" });
    });
  }
</script>
